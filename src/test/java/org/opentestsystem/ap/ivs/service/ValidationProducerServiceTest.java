/*
 * Copyright 2017 Regents of the University of California. Licensed under the Educational Community License, Version
 * 2.0 (the "license"); you may not use this file except in compliance with the License. You may obtain a copy of the
 * license at
 *
 * https://opensource.org/licenses/ECL-2.0
 *
 * Unless required under applicable law or agreed to in writing, software distributed under the License is distributed
 * in an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for
 * specific language governing permissions and limitations under the license.
 */

package org.opentestsystem.ap.ivs.service;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;
import org.opentestsystem.ap.ivs.config.AmqpConfig;
import org.opentestsystem.ap.ivs.config.IvsProperties;
import org.opentestsystem.ap.ivs.mapper.IvsMapper;
import org.opentestsystem.ap.ivs.models.PushValidation;
import org.springframework.amqp.rabbit.core.RabbitTemplate;

import static org.assertj.core.api.Assertions.assertThat;

@RunWith(MockitoJUnitRunner.class)
public class ValidationProducerServiceTest {

    @Mock
    private RabbitTemplate mockRabbitTemplate;

    @Mock
    private AmqpConfig mockAmqpConfig;

    private IvsMapper ivsMapper = new IvsMapper();

    private IvsProperties ivsProperties = new IvsProperties();

    private ValidationProducerService service;

    @Before
    public void setup() {
        service = new ValidationProducerService(mockRabbitTemplate, mockAmqpConfig, ivsMapper, ivsProperties);
    }

    @Test
    public void itShouldProcessRequest() {
        final PushValidation dto = new PushValidation();
        dto.setCommitMessage("Updated the braille content.");
        assertThat(service.shouldProcessRequest(dto)).isTrue();
    }

    @Test
    public void itShouldNotProcessRequest() {
        final PushValidation dto = new PushValidation();
        dto.setCommitMessage(ivsProperties.getValidationCommitMessage() + " 1234");
        assertThat(service.shouldProcessRequest(dto)).isFalse();
    }
}
