/*
 *  Copyright 2017 Regents of the University of California.
 *
 *  Licensed under the Educational Community License, Version 2.0 (the "license");
 *  you may not use this file except in compliance with the License. You may
 *  obtain a copy of the license at
 *
 *  https://opensource.org/licenses/ECL-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
package org.opentestsystem.ap.ivs.config;

import org.gitlab4j.api.GitLabApi;
import org.gitlab4j.api.models.Namespace;
import org.opentestsystem.ap.common.client.GitlabClient;
import org.opentestsystem.ap.common.config.ItemBankProperties;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

import javax.annotation.PostConstruct;

import static org.mockito.Mockito.mock;

/**
 * No ItemBank configuration means we are running under a context where
 * we do not have what is need to connect to an actual Gitlab instance.
 * This configuration replaces the runtime configuration
 */
@Configuration
@ConditionalOnProperty(value = "itembank.test.enabled", havingValue = "true")
public class AppTestConfig {

    public final ItemBankProperties itemBankProperties;

    @Autowired
    public AppTestConfig(ItemBankProperties itemBankProperties) {
        this.itemBankProperties = itemBankProperties;
    }

    @Bean
    public GitlabClient gitlabClient() {
        return new GitlabClientStub(itemBankProperties);
    }

    public class GitlabClientStub extends GitlabClient {
        public GitlabClientStub(ItemBankProperties gitlabProperties) {
            super(gitlabProperties);
        }

        @Override
        @PostConstruct
        public void initialize() {
            setGitLabApi(mock(GitLabApi.class));
            setGroup(mock(Namespace.class));
        }
    }
}
