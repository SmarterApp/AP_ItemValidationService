/*
 * Copyright 2017 Regents of the University of California. Licensed under the Educational Community License, Version
 * 2.0 (the "license"); you may not use this file except in compliance with the License. You may obtain a copy of the
 * license at
 *
 * https://opensource.org/licenses/ECL-2.0
 *
 * Unless required under applicable law or agreed to in writing, software distributed under the License is distributed
 * in an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for
 * specific language governing permissions and limitations under the license.
 */

package org.opentestsystem.ap.ivs.mapper;

import org.junit.Before;
import org.junit.Test;
import org.opentestsystem.ap.ivs.models.PushValidation;
import org.opentestsystem.ap.ivs.models.PushValidationDto;

import static org.assertj.core.api.Assertions.assertThat;

public class IvsMapperTest {

    private IvsMapper mapper;

    @Before
    public void setup() {
        mapper = new IvsMapper();
    }

    @Test
    public void itShouldMapToDto() {
        PushValidation src = new PushValidation();
        src.setRef("refs/heads/master");
        src.setUserEmail("clarkKent@fairwaytech.com");
        src.setProjectName("item1234");
        src.setUserName("superman");

        final PushValidationDto dto = mapper.mapToDto(src);

        assertThat(dto.getItemId()).isEqualTo(src.getProjectName());
        assertThat(dto.getRef()).isEqualTo(src.getRef());
        assertThat(dto.getUserEmail()).isEqualTo(src.getUserEmail());
        assertThat(dto.getUserName()).isEqualTo(src.getUserName());
        assertThat(dto.getBranchName()).isEqualTo("master");
    }

    @Test
    public void itShouldParseBranchName() {
        validateBranchName("refs/heads/master", "master");
        validateBranchName("refs/heads/primary_1234_halJordan@fairwaytech.com",
            "primary_1234_halJordan@fairwaytech.com");
    }

    private void validateBranchName(final String ref, final String expectedBranchName) {
        assertThat(mapper.parseBranchName(ref)).isEqualTo(expectedBranchName);
    }
}
