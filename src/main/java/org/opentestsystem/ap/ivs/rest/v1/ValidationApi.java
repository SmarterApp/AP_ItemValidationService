package org.opentestsystem.ap.ivs.rest.v1;

import io.swagger.annotations.Api;
import lombok.extern.slf4j.Slf4j;
import org.opentestsystem.ap.ivs.config.IvsProperties;
import org.opentestsystem.ap.ivs.rest.PushValidationRequest;
import org.opentestsystem.ap.ivs.service.ValidationProducerService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

/**
 * Validation on IAT items
 */
@Slf4j
@RestController
@RequestMapping("/api/v1/validation")
@Api
public class ValidationApi {

    private final ValidationProducerService validationProducerService;

    private final IvsProperties ivsProperties;

    @Autowired
    public ValidationApi(final ValidationProducerService validationProducerService, final IvsProperties ivsProperties) {
        this.validationProducerService = validationProducerService;
        this.ivsProperties = ivsProperties;
    }

    /**
     * Places item on AMQP queue to be validated
     *
     * @param request The GitLab push hook containing item information
     * @param token The authentication token
     */
    @PostMapping
    public void validateItem(@RequestBody PushValidationRequest request, @RequestHeader("X-Gitlab-Token") String token) {
        log.debug("validate item {}, ref {}", request.getProjectName(), request.getRef());
        if (token.equals(ivsProperties.getGitLabSecret())) {
            validationProducerService.submitValidationRequest(request);
        } else {
            log.debug("failed to properly authenticate against gitlab secret with token {}", token);
        }
    }
}
