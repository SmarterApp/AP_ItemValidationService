package org.opentestsystem.ap.ivs.config;

import lombok.Getter;
import org.opentestsystem.ap.ivs.service.AmqpReceiver;
import org.springframework.amqp.core.Binding;
import org.springframework.amqp.core.BindingBuilder;
import org.springframework.amqp.core.Queue;
import org.springframework.amqp.core.TopicExchange;
import org.springframework.amqp.rabbit.connection.ConnectionFactory;
import org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer;
import org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

/**
 * Created by gregwhite on 8/16/17.
 */

@Configuration
public class AmqpConfig {

    @Autowired
    public AmqpConfig(final IvsProperties ivsProperties) {
        this.ivsProperties = ivsProperties;
    }

    @Getter
    private final IvsProperties ivsProperties;

    @Bean
    Queue queue() {
        return new Queue(ivsProperties.getValidationQueue(), false);
    }

    @Bean
    TopicExchange exchange() {
        return new TopicExchange(ivsProperties.getValidationTopicExchange());
    }

    @Bean
    Binding binding(Queue queue, TopicExchange exchange) {
        return BindingBuilder.bind(queue).to(exchange).with(ivsProperties.getValidationQueue());
    }

    @Bean
    SimpleMessageListenerContainer container(ConnectionFactory connectionFactory,
                                             MessageListenerAdapter listenerAdapter) {
        SimpleMessageListenerContainer container = new SimpleMessageListenerContainer();
        container.setConnectionFactory(connectionFactory);
        container.setQueueNames(ivsProperties.getValidationQueue());
        container.setMessageListener(listenerAdapter);
        return container;
    }

    @Bean
    MessageListenerAdapter listenerAdapter(AmqpReceiver receiver) {
        return new MessageListenerAdapter(receiver, "receiveMessage");
    }

    @Bean
    AmqpReceiver amqpReceiver() {
        return new AmqpReceiver();
    }
}
