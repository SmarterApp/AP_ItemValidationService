version: '2.1'
services:
    redis-server:
        container_name: redis-server
        image: healthcheck/redis
        networks:
            - spring-cloud-network
        ports:
            - 6379:6379
        logging:
            driver: json-file
    configuration-service:
        container_name: configuration-service
        image: @dockerTagBase@/configuration-service:@configServerVersion@
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:8888/health"]
          interval: 30s
          timeout: 5s
          retries: 3
        environment:
          CONFIG_SERVICE_REPO: "file://tmp"
          SPRING_CLOUD_BUS_ENABLED: "false"
          MANAGEMENT_HEALTH_RABBIT_ENABLED: "false"
        expose:
            - 8888
        ports:
            - 8888:8888
        networks:
            - spring-cloud-network
        volumes:
            - @USER_HOME@/smarter_app/iat-config-repo:/tmp
        logging:
            driver: json-file
        links:
            - redis-server
        depends_on:
          redis-server:
            condition: service_healthy
    ap-ivs:
        container_name: ap-ivs
        image: fwsbac/ap-ivs:@version@
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:8080/manage/health"]
          interval: 30s
          timeout: 5s
          retries: 3
        environment:
            CONFIG_SERVICE_ENABLED: "true"
            CONFIG_SERVICE_URL: "http://configuration-service:8888"
            SPRING_PROFILES_ACTIVE: "localcompose"
        ports:
            - 8087:8080
        networks:
            - spring-cloud-network
        links:
            - configuration-service
        depends_on:
          configuration-service:
            condition: service_healthy
        volumes:
            - @USER_HOME@/smarter_app:/tmp
        logging:
            driver: json-file
networks:
    spring-cloud-network:
        driver: bridge
